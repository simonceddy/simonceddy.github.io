{"version":3,"sources":["containers/CliWidget.js","store/actions/cliWidgetActions.js"],"names":["connect","state","widgetState","cli","active","activeWidgets","level","levels","top","dispatch","ownProps","setSize","height","width","type","SET_CLI_WIDGET_SIZE","payload","setCliWidgetSize","setPos","x","y","SET_CLI_WIDGET_POS","setCliWidgetPos","onClose","toggleWidgetInactive","bringToTop","moveToTop","withRouter","_ref","react_default","a","createElement","Widget","data","title","zIndex","onClick"],"mappings":"oKAwDeA,sBAdS,SAACC,GAAD,MAAY,CAClCC,YAAaD,EAAME,IACnBC,OAAQH,EAAMI,cAAcF,IAC5BG,MAAOL,EAAMM,OAAOJ,IACpBK,IAAKP,EAAMM,OAAOC,MAGO,SAACC,EAAUC,GAAX,MAAyB,CAClDC,QAAS,SAACC,EAAQC,GAAT,OAAmBJ,ECtCE,SAACG,EAAQC,GAAT,MAAoB,CAClDC,KAAMC,IACNC,QAAS,CACPJ,SACAC,UDkCmCI,CAAiBL,EAAQC,KAC9DK,OAAQ,SAACC,EAAGC,GAAJ,OAAUX,EC/BW,SAACU,EAAGC,GAAJ,MAAW,CACxCN,KAAMO,IACNL,QAAS,CACPG,IACAC,MD2ByBE,CAAgBH,EAAGC,KAC9CG,QAAS,kBAAMd,EAASe,YAAqB,SAC7CC,WAAY,kBAAMhB,EAASiB,YAAU,WAGxB1B,CAA6C2B,YA5C5D,SAAAC,GASG,IARD1B,EAQC0B,EARD1B,YACAS,EAOCiB,EAPDjB,QACAO,EAMCU,EANDV,OACAK,EAKCK,EALDL,QAEAjB,GAGCsB,EAJDxB,OAICwB,EAHDtB,OACAmB,EAECG,EAFDH,WACAjB,EACCoB,EADDpB,IAGA,OACEqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,KAAM/B,EACNS,QAASA,EACTO,OAAQA,EACRgB,MAAM,UACNX,QAASA,EACTY,OAAQ7B,EACR8B,QAAS,WACK,QAAR5B,GACFiB,MATN","file":"static/js/3.26895238.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  setCliWidgetSize,\n  setCliWidgetPos\n} from '../store/actions/cliWidgetActions';\nimport Widget from '../shared/containers/Widget';\nimport { toggleWidgetInactive } from '../store/actions/widgetActions';\nimport { moveToTop } from '../store/actions/zIndexActions';\n\nfunction CliWidget({\n  widgetState,\n  setSize,\n  setPos,\n  onClose,\n  active,\n  level,\n  bringToTop,\n  top\n}) {\n  // console.log(widgetState);\n  return (\n    <Widget\n      data={widgetState}\n      setSize={setSize}\n      setPos={setPos}\n      title=\"conEddy\"\n      onClose={onClose}\n      zIndex={level}\n      onClick={() => {\n        if (top !== 'cli') {\n          bringToTop();\n        }\n      }}\n    >\n      Testing\n    </Widget>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  widgetState: state.cli,\n  active: state.activeWidgets.cli,\n  level: state.levels.cli,\n  top: state.levels.top\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setSize: (height, width) => dispatch(setCliWidgetSize(height, width)),\n  setPos: (x, y) => dispatch(setCliWidgetPos(x, y)),\n  onClose: () => dispatch(toggleWidgetInactive('cli')),\n  bringToTop: () => dispatch(moveToTop('cli'))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CliWidget));\n","import {\n  GET_CLI_WIDGET,\n  SET_CLI_WIDGET_POS,\n  SET_CLI_WIDGET_SIZE\n} from '../actionTypes/widgetActions';\n\nexport const HANDLE_CLI_INPUT = 'HANDLE_CLI_INPUT';\n\nexport const getCliWidget = () => ({\n  type: GET_CLI_WIDGET\n});\n\nexport const setCliWidgetSize = (height, width) => ({\n  type: SET_CLI_WIDGET_SIZE,\n  payload: {\n    height,\n    width\n  }\n});\n\nexport const setCliWidgetPos = (x, y) => ({\n  type: SET_CLI_WIDGET_POS,\n  payload: {\n    x,\n    y\n  }\n});\n\nexport const handleCliInput = (input) => ({\n  type: HANDLE_CLI_INPUT,\n  payload: {\n    input\n  }\n});\n"],"sourceRoot":""}