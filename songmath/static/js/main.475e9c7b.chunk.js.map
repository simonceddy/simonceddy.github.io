{"version":3,"sources":["components/NavButton/NavButton.js","components/Layout/Layout.js","components/NoteFrequencies/NoteBox.js","support/scales/index.js","components/NoteFrequencies/index.js","support/splitArray.js","maths/EqualTemperedHz.js","maths/prepareScale.js","store/actions/actionTypes.js","components/NoteFrequencies/NoteSettings.js","components/Settings/OptionRow.js","components/Settings/SettingsInput.js","shared/components/ResetBox.js","containers/Frequencies.js","store/actions/index.js","support/beatmap/index.js","components/BpmBeats/BeatBpmBox.js","containers/BpmBeatCalculator.js","maths/calculateBeatLength.js","App.js","serviceWorker.js","support/defaultSettings.js","store/utils/normaliseNumber.js","store/reducers/index.js","store/reducers/settingsReducer.js","store/index.js","index.js"],"names":["NavButton","children","to","exact","className","Layout","NoteBox","note","hz","CHROMATIC_SCALE","NoteFrequencies","notes","cols","useMemo","rows","perCol","totalCols","length","i","push","splice","splitArray","map","index","key","step","EqualTemperedHz","refHz","precision","this","referenceHz","Fraction","twelthRootOfTwo","getHz","steps","valueOf","fraction","round","defaultOptions","lowOctave","highOctave","ref","octave","prepareScale","options","scale","config","Error","refNoteKey","findIndex","totalSteps","currentStep","currentLoopOctave","Math","floor","currentOctave","currentNote","SET_REFERENCE_FREQUENCY","SET_LOW_OCTAVE","SET_HIGH_OCTAVE","RESET_SETTINGS_TO_DEFAULT","SET_CURRENT_BPM","SET_HZ_PRECISION","SET_MS_PRECISION","RESET_NOTE_TABLE","RESET_BPM_TABLE","NoteSettings","OptionRow","label","SettingsInput","type","min","max","value","onChange","ResetBox","reset","onClick","connect","state","settings","hzPrecision","dispatch","setRefHz","payload","setReferenceFrequency","setLowOct","Number","parseInt","setLowOctave","setHighOct","setHighOctave","setPrecision","setHzPrecision","target","DEFAULT_BEATS","BeatBpmBox","beat","duration","beatLength","tripletDuration","dottedDuration","imgName","replace","src","alt","style","width","maxHeight","bpm","currentBpm","msPrecision","setBpm","setCurrentBpm","setMsPrecision","beatLengths","bpmF","beatF","wholeNote","calculateBeatLength","App","path","Boolean","window","location","hostname","match","defaultSettings","normaliseNumber","num","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oQAeeA,MAZf,YAAqD,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,GAAqB,IAAjBC,aAAiB,SAClD,OACE,kBAAC,IAAD,CACEC,UAAU,qBACVF,GAAIA,EACJC,MAAOA,GAENF,ICQQI,MAff,YAA+B,IAAbJ,EAAY,EAAZA,SAChB,OACE,yBAAKG,UAAU,gEACb,yBAAKA,UAAU,yCACb,kBAAC,EAAD,CAAWF,GAAG,IAAIC,OAAK,GAAvB,oBACA,kBAAC,EAAD,CAAWD,GAAG,OAAOC,OAAK,GAA1B,wBAGF,yBAAKC,UAAU,+BACZH,KCQMK,MAlBf,YAAgC,IAAbC,EAAY,EAAZA,KAAMC,EAAM,EAANA,GACvB,OACE,yBACEJ,UAAU,oHAEV,0BAAMA,UAAU,QACd,0BAAMA,UAAU,gCAAgCG,GADlD,MAGA,0BAAMH,UAAU,UAAhB,UACMI,EADN,KAEE,0BAAMJ,UAAU,yBAAhB,SCXD,IAAMK,EAAkB,CAC7B,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,KCQaC,MAhBf,YAA0C,IAAD,IAAdC,aAAc,MAAN,GAAM,EACjCC,EAAOC,mBAAQ,kBCNR,WAIb,IAJ0D,IAAzBC,EAAwB,uDAAjB,GAAIC,EAAa,uDAAJ,GAC/CC,EAAYF,EAAKG,OAAS,GAC1BL,EAAO,GAEJM,EAAI,EAAGA,EAAIF,EAAWE,IAC7BN,EAAKO,KAAKL,EAAKM,OAAO,EAAGL,IAK3B,OAAOH,EDJoBS,CAAWV,EAAOF,EAAgBQ,UAAS,CAACN,IAEvE,OACE,yBAAKP,UAAU,0CACZQ,EAAKU,KAAI,SAACR,EAAMS,GAAP,OACR,yBAAKC,IAAKD,EAAOnB,UAAU,wCACxBU,EAAKQ,KAAI,gBAAGf,EAAH,EAAGA,KAAMkB,EAAT,EAASA,KAAMjB,EAAf,EAAeA,GAAf,OACR,kBAAC,EAAD,CAASD,KAAMA,EAAMC,GAAIA,EAAIgB,IAAKC,a,wBEO/BC,MAlBf,SAASA,IAA6C,IAA7BC,EAA4B,uDAApB,IAAKC,EAAe,uDAAH,EAChD,KAAMC,gBAAgBH,GACpB,OAAO,IAAIA,EAAgBC,GAG7B,IAAMG,EAAc,IAAIC,IAASJ,GAE3BK,EAAe,SAAG,EAAM,EAAI,IAElCH,KAAKI,MAAQ,WAAgB,IAAfC,EAAc,uDAAN,EACpB,GAAc,IAAVA,EAAa,OAAOJ,EAAYK,UAEpC,IAAM3B,EAAMsB,EAAW,SAAIE,EAAmBE,GACxCE,EAAW,IAAIL,IAASvB,GAC9B,OAAO4B,EAASC,MAAMT,GAAWO,Y,8NCZrC,IAAMG,EAAiB,CACrBC,UAAW,EACXC,WAAY,EACZC,IAAK,CACHlC,KAAM,IACNmC,OAAQ,IAmBG,SAASC,EAAahB,GAA+C,IAAxCiB,EAAuC,uDAA7B,GAAIC,EAAyB,uDAAjBpC,EAC1DqC,E,yWAAM,IAAQR,EAAR,GAA2BM,GAEjCd,EAAc,IAAIJ,EAAgBC,EAAOiB,EAAQhB,WAIvD,GAAIkB,EAAOP,UAAYO,EAAON,WAC5B,MAAM,IAAIO,MAAM,qDAiBlB,IAdA,IAAMC,EAAaH,EAAMI,WAAU,SAAC1C,GAAD,OAAUA,IAASuC,EAAOL,IAAIlC,QAI3D2C,GAFUJ,EAAON,YAAcM,EAAOP,UAAY,IAE3BM,EAAM5B,OAM/BkC,EAFc,IAFAL,EAAOL,IAAIC,OAASI,EAAOP,WAAaM,EAAM5B,OAAU+B,GAMpErC,EAAQ,GAELO,EAAI,EAAGA,EAAIgC,EAAYhC,IAAK,CACnC,IAAMkC,EAAoBC,KAAKC,MAAMpC,EAAI2B,EAAM5B,QACzCsC,EAAgBH,EAAoBN,EAAOP,UAI3CiB,EAAcX,EAFR3B,EAAKkC,EAAoBP,EAAM5B,QAG3CN,EAAMQ,KAAK,CACTZ,KAAK,GAAD,OAAKiD,GAAL,OAAmBD,GACvB9B,KAAMP,EACNV,GAAIsB,EAAYG,MAAMkB,KAExBA,IAGF,OAAOxC,ECpEF,IAAM8C,EAA0B,0BAC1BC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAA4B,4BAC5BC,EAAkB,kBAClBC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAkB,kBCEhBC,MARf,YAAqC,IAAbjE,EAAY,EAAZA,SACtB,OACE,yBAAKG,UAAU,oDACZH,ICMQkE,MATf,YAA8C,IAAzBlE,EAAwB,EAAxBA,SAAwB,IAAdmE,aAAc,MAAN,GAAM,EAC3C,OACE,yBAAKhE,UAAU,iFACb,0BAAMA,UAAU,0BAA0BgE,EAA1C,KACA,0BAAMhE,UAAU,UAAUH,KCgBjBoE,MApBf,YAOI,IAAD,IANDC,YAMC,MANM,SAMN,EALDC,EAKC,EALDA,IACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACAtE,EACC,EADDA,UAEA,OACE,2BACEA,UAAS,mDAA8CA,GACvDkE,KAAMA,EACNC,IAAKA,EACLC,IAAKA,EACLC,MAAOA,EACPC,SAAUA,KCDDC,MAdf,YAA8B,IAAVC,EAAS,EAATA,MAClB,OACE,yBAAKxE,UAAU,oDACb,4BACEkE,KAAK,SACLO,QAASD,EACTxE,UAAU,gBAHZ,uBC6EN,IAee0E,eAfS,SAACC,GAAD,MAAY,CAClCjD,YAAaiD,EAAMC,SAASlD,YAC5BS,UAAWwC,EAAMC,SAASzC,UAC1BC,WAAYuC,EAAMC,SAASxC,WAC3BZ,UAAWmD,EAAMC,SAASC,gBAGD,SAACC,GAAD,MAAe,CACxCC,SAAU,SAAC3E,GAAD,OAAQ0E,EC7EiB,SAAC1E,GAAD,MAAS,CAC5C8D,KAAMb,EACN2B,QAAS,CACP5E,OD0EyB6E,CAAsB7E,KACjD8E,UAAW,SAAC5C,GAAD,OAAYwC,ECvEG,SAACxC,GAAD,MAAa,CACvC4B,KAAMZ,EACN0B,QAAS,CACP1C,OAAQ6C,OAAOC,SAAS9C,EAAQ,MDoEF+C,CAAa/C,KAC7CgD,WAAY,SAAChD,GAAD,OAAYwC,ECjEG,SAACxC,GAAD,MAAa,CACxC4B,KAAMX,EACNyB,QAAS,CACP1C,OAAQ6C,OAAOC,SAAS9C,EAAQ,MD8DDiD,CAAcjD,KAC/CkD,aAAc,SAAChE,GAAD,OAAesD,EChDD,SAACtD,GAAD,MAAgB,CAC5C0C,KAAMR,EACNsB,QAAS,CACPxD,UAAW2D,OAAOC,SAAS5D,EAAW,MD6CFiE,CAAejE,KACrDgD,MAAO,kBAAMM,ECnCsB,CACnCZ,KAAMN,QDqCOc,EAhFf,YAUI,IAAD,IATDhD,mBASC,MATa,IASb,MARDS,iBAQC,MARW,EAQX,MAPDC,kBAOC,MAPY,EAOZ,EAND2C,EAMC,EANDA,SACAG,EAKC,EALDA,UACAI,EAIC,EAJDA,WAIC,IAHD9D,iBAGC,MAHW,EAGX,EAFDgE,EAEC,EAFDA,aACAhB,EACC,EADDA,MAGMjE,EAAQE,mBAAQ,kBAAM8B,EAAab,EAAa,CACpDS,YACAC,aACAZ,gBACE,CACFE,EACAS,EACAC,EACAZ,IAGF,OACE,oCACE,yBAAKxB,UAAU,qDACb,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWgE,MAAM,4BACf,kBAAC,EAAD,CACEG,IAAI,IACJnE,UAAU,aACVqE,MAAO3C,EACP4C,SAAU,gBAAGoB,EAAH,EAAGA,OAAH,OAAgBX,EAASW,EAAOrB,OAAS,OAGvD,kBAAC,EAAD,CAAWL,MAAM,cACf,kBAAC,EAAD,CACEhE,UAAU,aACVqE,MAAOlC,EACPmC,SAAU,gBAAGoB,EAAH,EAAGA,OAAH,OAAgBR,EAAUQ,EAAOrB,WAG/C,kBAAC,EAAD,CAAWL,MAAM,eACf,kBAAC,EAAD,CACEhE,UAAU,aACVqE,MAAOjC,EACPkC,SAAU,gBAAGoB,EAAH,EAAGA,OAAH,OAAgBJ,EAAWI,EAAOrB,WAGhD,kBAAC,EAAD,CAAWL,MAAM,qBACf,kBAAC,EAAD,CACEG,IAAI,IACJnE,UAAU,aACVqE,MAAO7C,EACP8C,SAAU,gBAAGoB,EAAH,EAAGA,OAAH,OAAgBF,EAAaE,EAAOrB,YAIpD,kBAAC,EAAD,CAAUG,MAAOA,KAEnB,kBAAC,EAAD,CAAiBjE,MAAOA,QE5EvB,IAAMoF,EAAgB,CAC3B,QACA,QACA,OACA,OACA,OACA,MACA,MACA,MACA,IACA,IACA,IACA,KC8BaC,MAzCf,YAMI,IAAD,IALDC,YAKC,MALM,IAKN,EAJDC,EAIC,EAJDA,SACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,eAEMC,EAAUL,EAAKM,QAAQ,IAAK,KAClC,OACE,yBACEnG,UAAU,mIAEV,yBAAKA,UAAU,mCACb,yBACEoG,IAAG,qBAAgBF,EAAhB,QACHG,IAAKR,EACLS,MAAO,CACLC,MAAO,OACPC,UAAW,WAIjB,yBAAKxG,UAAU,sBACZ6F,EADH,SAGA,yBAAK7F,UAAU,sBACZ+F,EADH,QACmC,IAAfA,EAAmB,KAAO,KAE9C,yBAAK/F,UAAU,2BACZ8F,EADH,OAGA,yBAAK9F,UAAU,2BACZgG,EADH,eAGA,yBAAKhG,UAAU,2BACZiG,EADH,gB,8NCiBN,IAWevB,eAXS,SAACC,GAAD,MAAY,CAClC8B,IAAK9B,EAAMC,SAAS8B,WACpBlF,UAAWmD,EAAMC,SAAS+B,gBAGD,SAAC7B,GAAD,MAAe,CACxC8B,OAAQ,SAACH,GAAD,OAAS3B,EHzBU,SAAC2B,GAAD,MAAU,CACrCvC,KAAMT,EACNuB,QAAS,CACPyB,IAAKtB,OAAOC,SAASqB,EAAK,MGsBFI,CAAcJ,KACxCjB,aAAc,SAAChE,GAAD,OAAesD,EHRD,SAACtD,GAAD,MAAgB,CAC5C0C,KAAMP,EACNqB,QAAS,CACPxD,UAAW2D,OAAOC,SAAS5D,EAAW,MGKFsF,CAAetF,KACrDgD,MAAO,kBAAMM,EHEqB,CAClCZ,KAAML,QGAOa,EArDf,YAMI,IAAD,IALD+B,WAKC,MALK,IAKL,EAJDG,EAIC,EAJDA,OAIC,IAHDpF,iBAGC,MAHW,EAGX,EAFDgE,EAEC,EAFDA,aACAhB,EACC,EADDA,MAGMuC,EAActG,mBAAQ,kBAC1BkF,EAAczE,KAAI,SAAC2E,GAAD,O,yWAAA,IClBP,WAAsE,IAAzCY,EAAwC,uDAAlC,IAAKZ,EAA6B,uDAAtB,MAAOrE,EAAe,uDAAH,EACzEwF,EAAO,IAAIrF,IAAS8E,GACpBQ,EAAQ,IAAItF,IAASkE,GACrBqB,EAAY,IAAIvF,IAAU,GAAKqF,EAAQ,GACvClB,EAAW,IAAInE,IAASsF,EAAQC,EAAY,KAC5CnB,EAAa,IAAIpE,IAAiB,EAARsF,GAC1BjB,EAAkB,IAAIrE,IAAqB,EAAXmE,EAAgB,GAChDG,EAAiB,IAAItE,IAAoB,IAAXmE,GAEpC,MAAO,CACLA,SAAUA,EAAS7D,MAAMT,GAAWO,UACpCgE,WAAYA,EAAW9D,MAAMT,GAAWO,UACxCiE,gBAAiBA,EAAgB/D,MAAMT,GAAWO,UAClDkE,eAAgBA,EAAehE,MAAMT,GAAWO,WDKdoF,CAAoBV,EAAKZ,EAAMrE,GAA/C,CAA2DqE,cAC5E,CAACY,EAAKjF,IAET,OACE,oCACE,yBAAKxB,UAAU,6CACb,yBAAKA,UAAU,oDACb,kBAAC,EAAD,CAAWgE,MAAM,OACf,kBAAC,EAAD,CACEG,IAAI,IACJE,MAAOoC,EACPnC,SAAU,gBAAGoB,EAAH,EAAGA,OAAH,OAAgBkB,EAAOlB,EAAOrB,WAG5C,kBAAC,EAAD,CAAWL,MAAM,qBACf,kBAAC,EAAD,CACEG,IAAI,IACJE,MAAO7C,EACP8C,SAAU,gBAAGoB,EAAH,EAAGA,OAAH,OAAgBF,EAAaE,EAAOrB,YAIpD,kBAAC,EAAD,CAAUG,MAAOA,KAEnB,yBAAKxE,UAAU,wBACZ+G,EAAY7F,KAAI,SAAC2E,GAAD,OACf,kBAAC,EAAD,eAAYzE,IAAKyE,EAAKA,MAAUA,YE1B3BuB,MAbf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAItH,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOsH,KAAK,OAAOtH,OAAK,GACtB,kBAAC,EAAD,SCFYuH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCTSC,EATS,CACtBjG,YAAa,IACbS,UAAW,EACXC,WAAY,EACZsE,WAAY,IACZ7B,YAAa,EACb8B,YAAa,GCLA,SAASiB,EAAgBC,GAA+B,IAA1B1D,EAAyB,uDAAnB,EAAGC,EAAgB,uDAAV,SAC1D,OAAOD,GAAO0D,EACTzD,GAAOyD,EAAMA,EAAMzD,EACpBD,E,ykBCDN,IAIe2D,EAJKC,YAAgB,CAClCnD,SCUa,WAA2D,IAAlCD,EAAiC,uDAAzBgD,EAAiBK,EAAQ,uCACvE,OAAQA,EAAO9D,MACb,KAAKP,EACH,OAAO,KAAKgB,EAAZ,CAAmBgC,YAAaiB,EAAgBI,EAAOhD,QAAQxD,aACjE,KAAKkC,EACH,OAAO,KAAKiB,EAAZ,CAAmBE,YAAa+C,EAAgBI,EAAOhD,QAAQxD,aACjE,KAAK6B,EACH,OAAO,KAAKsB,EAAZ,CAAmBjD,YAAakG,EAAgBI,EAAOhD,QAAQ5E,MACjE,KAAKkD,EAEH,OAAI0E,EAAOhD,QAAQ1C,OAASqC,EAAMvC,WACzB,KACFuC,EADL,CAEExC,UAAW6F,EAAOhD,QAAQ1C,OAC1BF,WAAY4F,EAAOhD,QAAQ1C,SAGxB,KAAKqC,EAAZ,CAAmBxC,UAAW6F,EAAOhD,QAAQ1C,SAC/C,KAAKiB,EACH,OAAIyE,EAAOhD,QAAQ1C,OAASqC,EAAMxC,UACzB,KACFwC,EADL,CAEEvC,WAAY4F,EAAOhD,QAAQ1C,OAC3BH,UAAW6F,EAAOhD,QAAQ1C,SAGvB,KAAKqC,EAAZ,CAAmBvC,WAAY4F,EAAOhD,QAAQ1C,SAChD,KAAKmB,EACH,OAAO,KAAKkB,EAAZ,CAAmB+B,WAAYkB,EAAgBI,EAAOhD,QAAQyB,IAAK,KACrE,KAAK5C,EACH,OAAO,KACFc,EADL,CAEEgC,YAAagB,EAAgBhB,YAC7BD,WAAYiB,EAAgBjB,aAEhC,KAAK9C,EACH,OAAO,KACF+D,EADL,CAEEhB,YAAahC,EAAMgC,YACnBD,WAAY/B,EAAM+B,aAEtB,KAAKlD,EACH,OAAOmE,EACT,QACE,OAAOhD,MCrDEsD,EAFDC,YAAYJ,GCQ1BK,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,IAAD,CAAQI,SAAS,KACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,SNgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.475e9c7b.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction NavButton({ children, to, exact = false }) {\n  return (\n    <NavLink\n      className=\"nav-button text-lg\"\n      to={to}\n      exact={exact}\n    >\n      {children}\n    </NavLink>\n  );\n}\n\nexport default NavButton;\n","import React from 'react';\nimport NavButton from '../NavButton/NavButton';\n\nfunction Layout({ children }) {\n  return (\n    <div className=\"min-h-full w-full md:w-4/5 flex flex-col bg-blue-800 mx-auto\">\n      <div className=\"mx-3 mt-2 flex flex-row justify-start\">\n        <NavButton to=\"/\" exact>Note Frequencies</NavButton>\n        <NavButton to=\"/bpm\" exact>BPM Beat Calculator</NavButton>\n        {/* <NavButton to=\"/settings\" exact>Settings</NavButton> */}\n      </div>\n      <div className=\"flex-1 mx-3 p-2 bg-blue-200\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\n\nfunction NoteBox({ note, hz }) {\n  return (\n    <div\n      className=\"px-3 py-1 border bg-blue-200 border-blue-500 m-1 flex flex-row justify-center text-sm hover:bg-yellow-200 flex-1\"\n    >\n      <span className=\"mr-2\">\n        <span className=\"font-semibold text-green-800\">{note}</span> :\n      </span>\n      <span className=\"flex-1\">\n        {`${hz} `}\n        <span className=\"font-semibold text-xs\">\n          Hz\n        </span>\n      </span>\n    </div>\n  );\n}\n\nexport default NoteBox;\n","/* eslint-disable import/prefer-default-export */\nexport const CHROMATIC_SCALE = [\n  'C',\n  'C#',\n  'D',\n  'D#',\n  'E',\n  'F',\n  'F#',\n  'G',\n  'G#',\n  'A',\n  'A#',\n  'B',\n];\n","import React, { useMemo } from 'react';\nimport NoteBox from './NoteBox';\nimport splitArray from '../../support/splitArray';\nimport { CHROMATIC_SCALE } from '../../support/scales/index';\n\nfunction NoteFrequencies({ notes = [] }) {\n  const cols = useMemo(() => splitArray(notes, CHROMATIC_SCALE.length), [notes]);\n\n  return (\n    <div className=\"flex flex-row flex-wrap justify-around\">\n      {cols.map((rows, index) => (\n        <div key={index} className=\"flex flex-col p-2 hover:bg-green-200\">\n          {rows.map(({ note, step, hz }) => (\n            <NoteBox note={note} hz={hz} key={step} />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default NoteFrequencies;\n","export default function splitArray(rows = [], perCol = 12) {\n  const totalCols = rows.length / 12;\n  const cols = [];\n\n  for (let i = 0; i < totalCols; i++) {\n    cols.push(rows.splice(0, perCol));\n  }\n\n  // console.log(cols);\n\n  return cols;\n}\n","import Fraction from 'fraction.js/fraction';\n\nfunction EqualTemperedHz(refHz = 440, precision = 3) {\n  if (!(this instanceof EqualTemperedHz)) {\n    return new EqualTemperedHz(refHz);\n  }\n\n  const referenceHz = new Fraction(refHz);\n\n  const twelthRootOfTwo = 2 ** (1 / 12);\n\n  this.getHz = (steps = 0) => {\n    if (steps === 0) return referenceHz.valueOf();\n\n    const hz = (referenceHz * (twelthRootOfTwo ** steps));\n    const fraction = new Fraction(hz);\n    return fraction.round(precision).valueOf();\n  };\n}\n\nexport default EqualTemperedHz;\n","// eslint-disable-next-line no-unused-vars\nimport EqualTemperedHz from './EqualTemperedHz';\nimport { CHROMATIC_SCALE } from '../support/scales/index';\n\nconst defaultOptions = {\n  lowOctave: 0,\n  highOctave: 8,\n  ref: {\n    note: 'A',\n    octave: 4\n  }\n};\n\n/**\n * Init scale notes - Work in progress - needs cleaning up\n *\n * Takes the given Reference frequency object and calculates the frequencies of\n * each note in the given scale.\n *\n * Available options (with defaults) include:\n * - lowOctave: 0 // The first octave to calculate relative to the reference notes octave\n * - highOctave: 8 // The final octave to calculate relative to the reference notes octave\n * - ref: { note: A, octave: 4 } // Sets the reference note to A4\n *\n * @param {number} refHz The reference frequency in hertz\n * @param {object} options Allows overwriting default settings\n * @param {string[]} scale The scale to use. Uses chromatic scale starting at C by default.\n */\nexport default function prepareScale(refHz, options = {}, scale = CHROMATIC_SCALE) {\n  const config = { ...defaultOptions, ...options };\n\n  const referenceHz = new EqualTemperedHz(refHz, options.precision);\n\n  // console.log(refHz);\n\n  if (config.lowOctave > config.highOctave) {\n    throw new Error('The low octave must be lower than the high octave');\n  }\n\n  const refNoteKey = scale.findIndex((note) => note === config.ref.note);\n\n  const octaves = config.highOctave - (config.lowOctave - 1);\n\n  const totalSteps = octaves * scale.length;\n\n  const refStep = ((config.ref.octave - config.lowOctave) * scale.length) + refNoteKey;\n  // console.log(refStep);\n  const firstStep = 0 - refStep;\n\n  let currentStep = firstStep;\n\n  const notes = [];\n\n  for (let i = 0; i < totalSteps; i++) {\n    const currentLoopOctave = Math.floor(i / scale.length);\n    const currentOctave = currentLoopOctave + config.lowOctave;\n    // console.log((i * scale.length) / scale.length);\n    const key = i - (currentLoopOctave * scale.length);\n    // console.log(currentOctave);\n    const currentNote = scale[key];\n    notes.push({\n      note: `${currentNote}${currentOctave}`,\n      step: i,\n      hz: referenceHz.getHz(currentStep)\n    });\n    currentStep++;\n  }\n\n  return notes;\n}\n","export const SET_REFERENCE_FREQUENCY = 'SET_REFERENCE_FREQUENCY';\nexport const SET_LOW_OCTAVE = 'SET_LOW_OCTAVE';\nexport const SET_HIGH_OCTAVE = 'SET_HIGH_OCTAVE';\nexport const RESET_SETTINGS_TO_DEFAULT = 'RESET_SETTINGS_TO_DEFAULT';\nexport const SET_CURRENT_BPM = 'SET_CURRENT_BPM';\nexport const SET_HZ_PRECISION = 'SET_HZ_PRECISION';\nexport const SET_MS_PRECISION = 'SET_MS_PRECISION';\nexport const RESET_NOTE_TABLE = 'RESET_NOTE_TABLE';\nexport const RESET_BPM_TABLE = 'RESET_BPM_TABLE';\n","import React from 'react';\n\nfunction NoteSettings({ children }) {\n  return (\n    <div className=\"flex flex-col justify-center items-center flex-1\">\n      {children}\n    </div>\n  );\n}\n\nexport default NoteSettings;\n","import React from 'react';\n\nfunction OptionRow({ children, label = '' }) {\n  return (\n    <div className=\"flex flex-row items-center justify-between m-1 px-3 py-1 w-full font-semibold\">\n      <span className=\"px-3 flex-1 text-right\">{label}:</span>\n      <span className=\"flex-1\">{children}</span>\n    </div>\n  );\n}\n\nexport default OptionRow;\n","import React from 'react';\n\nfunction SettingsInput({\n  type = 'number',\n  min,\n  max,\n  value,\n  onChange,\n  className\n}) {\n  return (\n    <input\n      className={`border border-blue-500 bg-yellow-200 p-1 ${className}`}\n      type={type}\n      min={min}\n      max={max}\n      value={value}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default SettingsInput;\n","import React from 'react';\n\nfunction ResetBox({ reset }) {\n  return (\n    <div className=\"flex flex-col justify-center items-center flex-1\">\n      <button\n        type=\"button\"\n        onClick={reset}\n        className=\"reset-button\"\n      >\n        Reset to defaults\n      </button>\n    </div>\n  );\n}\n\nexport default ResetBox;\n","import React, { useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport NoteFrequencies from '../components/NoteFrequencies';\n// import EqualTemperedHz from '../maths/EqualTemperedHz';\nimport prepareScale from '../maths/prepareScale';\nimport {\n  setReferenceFrequency,\n  setLowOctave,\n  setHighOctave,\n  setHzPrecision,\n  resetNoteTable\n} from '../store/actions/index';\nimport NoteSettings from '../components/NoteFrequencies/NoteSettings';\nimport OptionRow from '../components/Settings/OptionRow';\nimport SettingsInput from '../components/Settings/SettingsInput';\nimport ResetBox from '../shared/components/ResetBox';\n\nfunction Frequencies({\n  referenceHz = 440,\n  lowOctave = 0,\n  highOctave = 8,\n  setRefHz,\n  setLowOct,\n  setHighOct,\n  precision = 3,\n  setPrecision,\n  reset\n}) {\n  // console.log(referenceHz);\n  const notes = useMemo(() => prepareScale(referenceHz, {\n    lowOctave,\n    highOctave,\n    precision\n  }), [\n    referenceHz,\n    lowOctave,\n    highOctave,\n    precision\n  ]);\n\n  return (\n    <>\n      <div className=\"flex sm:flex-row flex-col justify-between mx-auto\">\n        <NoteSettings>\n          <OptionRow label=\"Reference Frequency (Hz)\">\n            <SettingsInput\n              min=\"0\"\n              className=\"text-right\"\n              value={referenceHz}\n              onChange={({ target }) => setRefHz(target.value || 0)}\n            />\n          </OptionRow>\n          <OptionRow label=\"Low Octave\">\n            <SettingsInput\n              className=\"text-right\"\n              value={lowOctave}\n              onChange={({ target }) => setLowOct(target.value)}\n            />\n          </OptionRow>\n          <OptionRow label=\"High Octave\">\n            <SettingsInput\n              className=\"text-right\"\n              value={highOctave}\n              onChange={({ target }) => setHighOct(target.value)}\n            />\n          </OptionRow>\n          <OptionRow label=\"Decimal precision\">\n            <SettingsInput\n              min=\"0\"\n              className=\"text-right\"\n              value={precision}\n              onChange={({ target }) => setPrecision(target.value)}\n            />\n          </OptionRow>\n        </NoteSettings>\n        <ResetBox reset={reset} />\n      </div>\n      <NoteFrequencies notes={notes} />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  referenceHz: state.settings.referenceHz,\n  lowOctave: state.settings.lowOctave,\n  highOctave: state.settings.highOctave,\n  precision: state.settings.hzPrecision\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setRefHz: (hz) => dispatch(setReferenceFrequency(hz)),\n  setLowOct: (octave) => dispatch(setLowOctave(octave)),\n  setHighOct: (octave) => dispatch(setHighOctave(octave)),\n  setPrecision: (precision) => dispatch(setHzPrecision(precision)),\n  reset: () => dispatch(resetNoteTable())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Frequencies);\n","// import Fraction from 'fraction.js/fraction';\nimport {\n  SET_REFERENCE_FREQUENCY,\n  SET_LOW_OCTAVE,\n  SET_HIGH_OCTAVE,\n  SET_CURRENT_BPM,\n  RESET_SETTINGS_TO_DEFAULT,\n  SET_HZ_PRECISION,\n  SET_MS_PRECISION,\n  RESET_BPM_TABLE,\n  RESET_NOTE_TABLE\n} from './actionTypes';\n\nexport const setReferenceFrequency = (hz) => ({\n  type: SET_REFERENCE_FREQUENCY,\n  payload: {\n    hz\n  }\n});\n\nexport const setLowOctave = (octave) => ({\n  type: SET_LOW_OCTAVE,\n  payload: {\n    octave: Number.parseInt(octave, 10)\n  }\n});\n\nexport const setHighOctave = (octave) => ({\n  type: SET_HIGH_OCTAVE,\n  payload: {\n    octave: Number.parseInt(octave, 10)\n  }\n});\n\nexport const setCurrentBpm = (bpm) => ({\n  type: SET_CURRENT_BPM,\n  payload: {\n    bpm: Number.parseInt(bpm, 10)\n  }\n});\n\nexport const resetSettingsToDefault = () => ({\n  type: RESET_SETTINGS_TO_DEFAULT\n});\n\nexport const setHzPrecision = (precision) => ({\n  type: SET_HZ_PRECISION,\n  payload: {\n    precision: Number.parseInt(precision, 10)\n  }\n});\n\nexport const setMsPrecision = (precision) => ({\n  type: SET_MS_PRECISION,\n  payload: {\n    precision: Number.parseInt(precision, 10)\n  }\n});\n\nexport const resetNoteTable = () => ({\n  type: RESET_NOTE_TABLE\n});\n\nexport const resetBpmTable = () => ({\n  type: RESET_BPM_TABLE\n});\n","/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_BEATS = [\n  '1/256',\n  '1/128',\n  '1/64',\n  '1/32',\n  '1/16',\n  '1/8',\n  '1/4',\n  '1/2',\n  '1',\n  '2',\n  '4',\n  '8'\n];\n","import React from 'react';\n\nfunction BeatBpmBox({\n  beat = '1',\n  duration,\n  beatLength,\n  tripletDuration,\n  dottedDuration\n}) {\n  const imgName = beat.replace('/', '-');\n  return (\n    <div\n      className=\"px-2 py-1 border border-blue-500 m-1 flex flex-row justify-between text-sm hover:bg-blue-100 flex-1 w-full mx-auto items-center\"\n    >\n      <div className=\"w-8 h-8 mx-2 flex-1 break-words\">\n        <img\n          src={`static/img/${imgName}.svg`}\n          alt={beat}\n          style={{\n            width: 'auto',\n            maxHeight: '100%'\n          }}\n        />\n      </div>\n      <div className=\"flex-1 break-words\">\n        {beat} note\n      </div>\n      <div className=\"flex-1 break-words\">\n        {beatLength} beat{beatLength === 1 ? null : 's'}\n      </div>\n      <div className=\"flex-1 break-words mx-2\">\n        {duration} ms\n      </div>\n      <div className=\"flex-1 break-words mx-2\">\n        {tripletDuration} ms triplet\n      </div>\n      <div className=\"flex-1 break-words mx-2\">\n        {dottedDuration} ms dotted\n      </div>\n    </div>\n  );\n}\n\nexport default BeatBpmBox;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport calculateBeatLength from '../maths/calculateBeatLength';\nimport { DEFAULT_BEATS } from '../support/beatmap/index';\nimport SettingsInput from '../components/Settings/SettingsInput';\nimport OptionRow from '../components/Settings/OptionRow';\nimport BeatBpmBox from '../components/BpmBeats/BeatBpmBox';\nimport { setCurrentBpm, setMsPrecision, resetBpmTable } from '../store/actions';\nimport ResetBox from '../shared/components/ResetBox';\n\nfunction BpmBeatCalculator({\n  bpm = 120,\n  setBpm,\n  precision = 2,\n  setPrecision,\n  reset\n}) {\n  // console.log(bpm);\n  const beatLengths = useMemo(() => (\n    DEFAULT_BEATS.map((beat) => ({ ...calculateBeatLength(bpm, beat, precision), beat }))\n  ), [bpm, precision]);\n\n  return (\n    <>\n      <div className=\"flex sm:flex-row flex-col justify-between\">\n        <div className=\"flex flex-col flex-1 justify-center items-center\">\n          <OptionRow label=\"BPM\">\n            <SettingsInput\n              min=\"0\"\n              value={bpm}\n              onChange={({ target }) => setBpm(target.value)}\n            />\n          </OptionRow>\n          <OptionRow label=\"Decimal precision\">\n            <SettingsInput\n              min=\"0\"\n              value={precision}\n              onChange={({ target }) => setPrecision(target.value)}\n            />\n          </OptionRow>\n        </div>\n        <ResetBox reset={reset} />\n      </div>\n      <div className=\"flex flex-col w-full\">\n        {beatLengths.map((beat) => (\n          <BeatBpmBox key={beat.beat} {...beat} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  bpm: state.settings.currentBpm,\n  precision: state.settings.msPrecision\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setBpm: (bpm) => dispatch(setCurrentBpm(bpm)),\n  setPrecision: (precision) => dispatch(setMsPrecision(precision)),\n  reset: () => dispatch(resetBpmTable())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BpmBeatCalculator);\n","import Fraction from 'fraction.js/fraction';\n\nexport default function calculateBeatLength(bpm = 120, beat = '1/4', precision = 2) {\n  const bpmF = new Fraction(bpm);\n  const beatF = new Fraction(beat);\n  const wholeNote = new Fraction((60 / bpmF) * 4);\n  const duration = new Fraction(beatF * wholeNote * 1000);\n  const beatLength = new Fraction(beatF * 4);\n  const tripletDuration = new Fraction((duration * 2) / 3);\n  const dottedDuration = new Fraction(duration * 1.5);\n\n  return {\n    duration: duration.round(precision).valueOf(),\n    beatLength: beatLength.round(precision).valueOf(),\n    tripletDuration: tripletDuration.round(precision).valueOf(),\n    dottedDuration: dottedDuration.round(precision).valueOf(),\n  };\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Layout from './components/Layout/Layout';\nimport Frequencies from './containers/Frequencies';\n// import Settings from './containers/Settings';\nimport BpmBeatCalculator from './containers/BpmBeatCalculator';\n\nfunction App() {\n  return (\n    <Layout>\n      <Route path=\"/\" exact>\n        <Frequencies />\n      </Route>\n      <Route path=\"/bpm\" exact>\n        <BpmBeatCalculator />\n      </Route>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const defaultSettings = {\n  referenceHz: 440,\n  lowOctave: 0,\n  highOctave: 8,\n  currentBpm: 120,\n  hzPrecision: 3,\n  msPrecision: 3,\n};\n\nexport default defaultSettings;\n","/* eslint-disable no-nested-ternary */\nexport default function normaliseNumber(num, min = 0, max = 99999999) {\n  return min <= num\n    ? (max >= num ? num : max)\n    : min;\n}\n","import { combineReducers } from 'redux';\nimport settingsReducer from './settingsReducer';\n\nconst rootReducer = combineReducers({\n  settings: settingsReducer\n});\n\nexport default rootReducer;\n","import defaultSettings from '../../support/defaultSettings';\nimport normaliseNumber from '../utils/normaliseNumber';\nimport {\n  SET_REFERENCE_FREQUENCY,\n  SET_LOW_OCTAVE,\n  SET_HIGH_OCTAVE,\n  RESET_SETTINGS_TO_DEFAULT,\n  SET_CURRENT_BPM,\n  SET_MS_PRECISION,\n  SET_HZ_PRECISION,\n  RESET_BPM_TABLE,\n  RESET_NOTE_TABLE\n} from '../actions/actionTypes';\n\nexport default function settingsReducer(state = defaultSettings, action) {\n  switch (action.type) {\n    case SET_MS_PRECISION:\n      return { ...state, msPrecision: normaliseNumber(action.payload.precision) };\n    case SET_HZ_PRECISION:\n      return { ...state, hzPrecision: normaliseNumber(action.payload.precision) };\n    case SET_REFERENCE_FREQUENCY:\n      return { ...state, referenceHz: normaliseNumber(action.payload.hz) };\n    case SET_LOW_OCTAVE:\n      // console.log(action);\n      if (action.payload.octave > state.highOctave) {\n        return {\n          ...state,\n          lowOctave: action.payload.octave,\n          highOctave: action.payload.octave\n        };\n      }\n      return { ...state, lowOctave: action.payload.octave };\n    case SET_HIGH_OCTAVE:\n      if (action.payload.octave < state.lowOctave) {\n        return {\n          ...state,\n          highOctave: action.payload.octave,\n          lowOctave: action.payload.octave\n        };\n      }\n      return { ...state, highOctave: action.payload.octave };\n    case SET_CURRENT_BPM:\n      return { ...state, currentBpm: normaliseNumber(action.payload.bpm, 1) };\n    case RESET_BPM_TABLE:\n      return {\n        ...state,\n        msPrecision: defaultSettings.msPrecision,\n        currentBpm: defaultSettings.currentBpm\n      };\n    case RESET_NOTE_TABLE:\n      return {\n        ...defaultSettings,\n        msPrecision: state.msPrecision,\n        currentBpm: state.currentBpm\n      };\n    case RESET_SETTINGS_TO_DEFAULT:\n      return defaultSettings;\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './shared/styles/tailwind.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}